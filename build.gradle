plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.3'
	id 'io.spring.dependency-management' version '1.1.7'
	id "org.sonarqube" version "5.1.0.4882"
	id 'jacoco'
}

sonar {
  properties {
    property "sonar.projectKey", "gf-dashboard-service"
    property "sonar.projectName", "gf-dashboard-service"
	  property "sonar.exclusions", "**/service/**"
	  property "sonar.java.binaries", "build/classes/java/main"
	  property "sonar.junit.reportPaths", "build/test-classes"
	  property "sonar.jacoco.reportPaths", "build/reports/jacoco/test/jacocoTestReport.xml"
  }
}


group = 'co.mw'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

repositories {
	mavenCentral()
}

ext {
	set('springCloudVersion', "2024.0.0")
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
	implementation "org.springframework.boot:spring-boot-starter-actuator"
	implementation "org.springdoc:springdoc-openapi-starter-webmvc-ui:2.6.0"
    implementation 'org.projectlombok:lombok:1.18.22'
	implementation 'com.github.ben-manes.caffeine:caffeine:3.0.4'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
	implementation 'org.apache.kafka:kafka-clients:3.9.0'
	implementation 'org.springframework.boot:spring-boot-starter' // Basic Spring Boot starter
	implementation 'org.springframework.kafka:spring-kafka-test:3.3.3'
	implementation 'org.springframework.kafka:spring-kafka:3.3.3'

//	implementation ('com.squareup.okhttp3:okhttp')
	implementation 'jakarta.validation:jakarta.validation-api:3.1.0'
	implementation "org.springframework.boot:spring-boot-starter-validation"
	implementation 'com.fasterxml.jackson.core:jackson-databind:2.15.2'
	implementation 'com.fasterxml.jackson.core:jackson-annotations:2.15.2'
	implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.15.2'


	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

jacoco {
	toolVersion = "0.8.8"
}

tasks.named('test') {
	useJUnitPlatform()
	finalizedBy jacocoTestReport
}

jacocoTestReport {
	dependsOn test
	reports {
		xml.required = true
		html.required = true
	}

	afterEvaluate {
		classDirectories.setFrom(files(classDirectories.files.collect {
			fileTree(dir: it, include: '**/*.class').exclude("**/service/**")
		}))
	}
}
configurations.configureEach {
	resolutionStrategy {
		force group: 'org.apache.commons', name: 'commons-compress', version: '1.25.0)'
		force group: 'ch.qos.logback', name: 'logback-core', version: '1.5.16'
		force group: 'ch.qos.logback', name: 'logback-classic', version: '1.5.16'
	}
}
